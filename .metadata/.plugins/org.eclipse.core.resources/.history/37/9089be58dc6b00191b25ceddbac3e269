package com.leetcode.methold;

import java.util.HashMap;

public class Solution {

	/*
	 * 暴力法
	 */
	 public int[] twoSum(int[] nums, int target) {
		    int i,j;
		    int[] solution = {0,0};
	        for (i = 0; i < nums.length; i++) {
	        	for (j = i + 1; j < nums.length; j++) {
					if (nums[i] + nums[j] == target) {
						solution[0] = i;
						solution[1] = j;
						return solution;
					}
				}
			}
	        return solution;
	    }
	 /*
	  * 哈希表法
	  */
	 public int[] twoSumHash(int[] nums, int target) {
		    int i,j;
		    HashMap<Integer , Integer> map = new HashMap<>();
	        for (i = 0; i < nums.length; i++) {
	        	map.put(nums[i],i);
			}
	        for(j = 0; j < nums.length; j++){
	        	int another = target - nums[i];
	        	if(map.containsKey(another) && map.get(another) != i){
	        		return new int[]{i,map.get(another)};
	        	}
	        }
	        throw new IllegalArgumentException("error");
	    }
}
