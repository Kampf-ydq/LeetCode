package com.leetcode.methold;

import java.util.ArrayList;

public class Reverse {

	public int reverse(int x) {
		/*
		 * x分3类：1.正常    2.负数    3.溢出
		 */
		//x是否溢出
		if (Integer.MIN_VALUE > x && x >Integer.MAX_VALUE ) {
			throw new IllegalArgumentException("x is overflow.");
		}
		ArrayList<Integer> nums = new ArrayList<>();
		int tmp,n;
		int res = 0;
		tmp = Math.abs(x);
		
		while(tmp > 9){ //注意退出条件
			n = tmp % 10; //余数
			tmp /= 10;
			nums.add(n);
		}
		nums.add(tmp);
		
		//反转后是否会溢出  Integer.MAX_VALUE=2147483647
		if (nums.size() == 10 && nums.get(0) > 2) {
			
		}
		
		for(int i = 0; i < nums.size(); i++){
			res += nums.get(i)*Math.pow(10, nums.size() - 1 - i);
			//反转后是否溢出
			if (Integer.MIN_VALUE > res && res >Integer.MAX_VALUE ) {
				return 0;
			}
		}
		
		if (x < 0) {
			return res*(-1);
		}
		return res;
	}

}
